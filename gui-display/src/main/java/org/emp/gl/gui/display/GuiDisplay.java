/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.emp.gl.gui.display;

import static java.awt.Color.red;

import java.beans.PropertyChangeEvent;

import org.emp.gl.action.Action;
import org.emp.gl.core.lookup.Lookup;

import org.emp.gl.timer.service.TimerChangeListener;
import org.emp.gl.timer.service.TimerService;


public class GuiDisplay extends javax.swing.JFrame implements TimerChangeListener {

    /**
     * Creates new form GuiDisplay
     */
    public GuiDisplay() {
        initComponents();
    }

    TimerService ts = Lookup.getInstance().getService(TimerService.class);
    Integer hou = ts.getHeures();
    Integer min = ts.getMinutes();
    Integer dis = ts.getDixiemeDeSeconde();
    Integer sec = ts.getSecondes();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        //jLabel1 = new javax.swing.JLabel();
        secText = new javax.swing.JLabel();
        minText = new javax.swing.JLabel();
        houText = new javax.swing.JLabel();
        disText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        secText.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        secText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secText.setText("0");

        minText.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        minText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minText.setText("0");

        houText.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        houText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        houText.setText("0");

        disText.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        disText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        disText.setText("0");



        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(houText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(minText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(secText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(disText)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        //.addComponent(jButton2)
                        .addGap(116, 116, 116))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(houText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(disText, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * @param args the command line arguments
     */
    public void Run(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GuiDisplay gd = (GuiDisplay) Lookup.getInstance().getService(TimerChangeListener.class);
                gd.setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel disText;
    private javax.swing.JLabel houText;
    private javax.swing.JLabel minText;
    private javax.swing.JLabel secText;
    // End of variables declaration//GEN-END:variables
    @Override
    public void propertyChange(PropertyChangeEvent pce) {

        /*
         * Integer hou=0; Integer min=0; Integer dis=0; Integer sec=0;
         * 
         */

        TimerService ts = Lookup.getInstance().getService(TimerService.class);
        hou = ts.getHeures();
        min = ts.getMinutes();
        dis = ts.getDixiemeDeSeconde();
        sec = ts.getSecondes();

        if ("hou".equals(pce.getPropertyName()))
            hou = (Integer) pce.getNewValue();
        else if ("min".equals(pce.getPropertyName()))
            min = (Integer) pce.getNewValue();
        if ("sec".equals(pce.getPropertyName()))
            sec = (Integer) pce.getNewValue();
        if ("dissec".equals(pce.getPropertyName()))
            dis = (Integer) pce.getNewValue();

        // houText.setBackground(red);
        houText.setText(hou.toString());
        minText.setText(min.toString());
        secText.setText(sec.toString());
        disText.setText(dis.toString());

    }

    @Override
    public void propertyChange(String propertyName, Object oldValue, Object newValue) {
        // TODO Auto-generated method stub

    }
}
